//Question - Palindrome Partitioning

class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> ans=new ArrayList();
        helper(s,0,new ArrayList(),ans);
        return ans;
    }
    public void helper(String s,int start,List<String> path,List<List<String>> ans){
        if(start==s.length()){
            ans.add(new ArrayList<>(path));
            return;
        }
        
        for(int end=start+1;end<=s.length();end++){
            if(isPalindrome(s,start,end-1)){
                path.add(s.substring(start,end));
                helper(s,end,path,ans);
                path.remove(path.size()-1);
            }
        }
        
    }
    private boolean isPalindrome(String s, int left, int right) {
        // Check if the substring s[left:right+1] is a palindrome
        while (left < right) {
            if (s.charAt(left++) != s.charAt(right--)) {
                return false;
            }
        }
        return true;
    }
}
